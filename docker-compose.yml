version: '3'
services:
  backend:
    build: ./backend # Utiliza el Dockerfile del backend
    container_name: backend
    ports:
      - "3000:3000" # Expone la API del backend en el puerto 3000
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cruddb # URI de conexión a MongoDB
    networks:
      - app-network
    volumes:
      - ./backend:/usr/src/app # Montar el código del backend
    depends_on:
      - mongo # Asegura que MongoDB esté disponible antes de iniciar el backend

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017" # Puerto para MongoDB
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db # Volumen persistente para MongoDB

  frontend:
    build: ./frontend # Utiliza el Dockerfile del frontend
    container_name: frontend
    ports:
      - "3001:3000" # Exponer el frontend en el puerto 3001
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    volumes:
      - ./frontend:/usr/src/app # Montar el código del frontend
    depends_on:
      - backend # Espera a que el backend esté listo

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090" # Puerto para Prometheus
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3002:3000" # Exponer Grafana en el puerto 3002
    networks:
      - app-network

  docker-exporter:
    image: prom/node-exporter:latest
    container_name: docker-exporter
    ports:
      - "9323:9323"
    networks:
      - app-network

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080" # Puerto para cAdvisor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
