version: '3'
services:
  app:
    image: "mi-app-node:latest" # Usaremos la imagen generada en Jenkins
    container_name: mi-app-node
    ports:
      - "3000:3000" # Expone la app en el puerto 3000
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/cruddb # Añadir la URI de conexión a MongoDB
    networks:
      - jenkins-network
    volumes:
      - .:/usr/src/app # Esto monta el código local en el contenedor para facilitar el desarrollo
    depends_on:
      - mongo # Nos aseguramos de que la app no arranque hasta que Mongo esté disponible

  mongo:
    image: "mongo:latest"
    container_name: mongo
    ports:
      - "27017:27017" # Puerto para la base de datos MongoDB
    networks:
      - jenkins-network
    volumes:
      - mongo-data:/data/db # Volumen persistente para la base de datos

  frontend:
    image: "node:18-alpine" # Imagen base para Next.js
    container_name: frontend
    working_dir: /usr/src/frontend
    volumes:
      - ./frontend:/usr/src/frontend # Montar el código del frontend
    ports:
      - "3001:3000" # Exponer el frontend en el puerto 3001
    command: sh -c "npm install && npm run dev" # Instalar dependencias y levantar el servidor de desarrollo
    networks:
      - jenkins-network
    depends_on:
      - app # Esperar a que el backend esté disponible

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"  # Exponer el puerto para acceder a la UI de Prometheus
    networks:
      - jenkins-network

  docker-exporter:
    image: prom/node-exporter:latest
    container_name: docker-exporter
    ports:
      - "9323:9323"
    networks:
      - jenkins-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3002:3000"  # Exponer puerto 3001 para Grafana
    networks:
      - jenkins-network

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"  # Exponer puerto 8080 para cAdvisor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
    networks:
      - jenkins-network

networks:
  jenkins-network:
    external: true

volumes:
  mongo-data: # Volumen para MongoDB
